# Documentação de apoio
# https://github.com/nextcloud/docker
# https://github.com/ONLYOFFICE/docker-onlyoffice-nextcloud
####
version: '3'

services:
  # nginx-proxy-manager
  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginx-proxy-manager
    hostname: nginx-proxy-manager
    restart: unless-stopped
    ports:
      - '80:80' # Public HTTP Port
      - '81:81' # Admin Web Port
      # Add any other Stream port you want to expose
      # - '21:21' # FTP
    healthcheck:
      test: ["CMD", "/usr/bin/check-health"]
      interval: 10s
      timeout: 3s
    volumes:
      - /home/servidor/files-server/data-docker/nginx-proxy-manager/data:/data
      - /home/servidor/files-server/data-docker/nginx-proxy-manager/letsencrypt:/etc/letsencrypt
      - /home/servidor/files-server/data-docker/nextcloud:/var/www/html
    depends_on:
      - data_base_npm
    networks:
      npm-net:
        ipv4_address: 192.168.1.2
    
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    hostname: pihole
    # For DHCP it is recommended if you remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "8080:80/tcp"
    environment:
      TZ: "America/Sao_Paulo"
      WEBPASSWORD: "password"
    volumes:
      - /home/servidor/files-server/data-docker/etc-pihole:/etc/pihole
      - /home/servidor/files-server/data-docker/etc-dnsmasq.d:/etc/etc-dnsmasq.d
    networks:
      npm-net:
        ipv4_address: 192.168.1.3
    restart: unless-stopped

  data_base_npm:
    image: mariadb:latest
    container_name: ${MARIADB_CONTAINER_NAME}-npm
    hostname: ${MARIADB_HOSTNAME}-npm
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 'npm'
      MYSQL_DATABASE: 'npm'
      MYSQL_USER: 'npm'
      MYSQL_PASSWORD: 'npm'
      MARIADB_AUTO_UPGRADE: '1'
    volumes:
      - /home/servidor/files-server/data-docker/data_base-nginx-proxy-manager:/var/lib/mysql
    networks:
      npm-net:
        ipv4_address: 192.168.1.4
  # Nextcloud
  nextcloud:
    image: nextcloud:latest
    container_name: ${NEXTCLOUD_CONTAINER_NAME}
    hostname: ${NEXTCLOUD_HOSTNAME}
    restart: unless-stopped
    environment:
      TZ: ${NEXTCLOUD_TIME_ZONE}

      NEXTCLOUD_ADMIN_USER: ${NEXTCLOUD_ADMIN_USER}
      NEXTCLOUD_ADMIN_PASSWORD: ${NEXTCLOUD_ADMIN_PASSWORD}
      NEXTCLOUD_TRUSTED_DOMAINS: "${NEXTCLOUD_TRUSTED_DOMAINS}"
      
      NEXTCLOUD_DATA_DIR: ${NEXTCLOUD_DATA_DIR}

      MYSQL_DATABASE: ${NEXTCLOUD_MYSQL_DATABASE}
      MYSQL_USER: ${NEXTCLOUD_MYSQL_USER}
      MYSQL_PASSWORD: ${NEXTCLOUD_MYSQL_PASSWORD}
      MYSQL_HOST: ${NEXTCLOUD_MYSQL_HOST}
    ports:
      - '83:80'
    depends_on:
      - data_base
      - minIO-S3
      - nginx-proxy-manager
    volumes:
      - /home/servidor/files-server/data-docker/nextcloud:/var/www/html
      - /home/servidor/files-server/resources/:/var/www/resources
    networks:
      npm-net:
        ipv4_address: 192.168.1.5
  
  data_base:
    image: mariadb:latest
    container_name: ${MARIADB_CONTAINER_NAME}
    hostname: ${MARIADB_HOSTNAME}
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MARIADB_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MARIADB_MYSQL_DATABASE}
      MYSQL_USER: ${MARIADB_MYSQL_USER}
      MYSQL_PASSWORD: ${MARIADB_MYSQL_PASSWORD}
    volumes:
      - /home/servidor/files-server/data-docker/mariaDB:/var/lib/mysql
    networks:
      npm-net:
        ipv4_address: 192.168.1.6
  
  minIO-S3:
    image: minio/minio
    container_name: ${MINIO_CONTAINER_NAME}
    hostname: ${MINIO_HOSTNAME}
    restart: unless-stopped
    command: server --console-address ":9001" /data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER} # AccessKey
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD} # SecretKey
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/servidor-s3/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - /home/servidor/files-server/data-docker/minIO:/data
    networks:
      npm-net:
        ipv4_address: 192.168.1.7
  # Onlyoffice
  # onlyoffice:
  #   image: onlyoffice/documentserver
  #   container_name: ${ONLYOFFICE_CONTAINER_NAME}
  #   hostname: ${ONLYOFFICE_HOSTNAME}
  #   restart: unless-stopped
  #   environment:
  #     JWT_SECRET: ${ONLYOFFICE_JWT_SECRET}
  #   expose:
  #     - '80'
  #     - '443'
  #   volumes:
  #     - /home/servidor/files-server/data-docker/onlyoffice/logs:/var/log/onlyoffice
  #     - /home/servidor/files-server/data-docker/onlyoffice/data:/var/www/onlyoffice/Data
  #     - /home/servidor/files-server/data-docker/onlyoffice/lib:/var/lib/onlyoffice
  #     - /home/servidor/files-server/data-docker/onlyoffice/postgresql:/var/lib/postgresql

networks:
  npm-net:
    name: npm-net
    driver: bridge
    ipam:
     config:
       - subnet: 192.168.1.0/24
         gateway: 192.168.1.1